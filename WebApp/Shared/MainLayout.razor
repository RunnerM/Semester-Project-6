@using WebApp.Data.Services.TMDB
@inherits LayoutComponentBase
@inject IDataService DataService
@inject NavigationManager NavigationManager

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer"/>
        <MudItem Style="padding-bottom:22px">
            <MudAutocomplete T="string" SearchFunc="@SearchFunc" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Default" OnKeyDown="OnEnter" Value="@_searchTerm"/>
        </MudItem>
        <MudSpacer/>
            <AuthorizeView>
                <Authorized>
                    <LoginControl/>
                </Authorized>
                <NotAuthorized>
                   <LoginControl/>
                </NotAuthorized>
            </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="@_open" Elevation="1" Color="Color.Primary">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6"> <MudIcon Icon="@Icons.Material.Filled.Api" Color="Color.Info"/>Media Platform</MudText>
        </MudDrawerHeader>
        <MudDivider Class="my-2" />
        <NavMenu/>
    </MudDrawer>
    <MudMainContent Class="pt-16 px-16">
        <MudContainer Class="mt-6">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code{
    private bool _open = false;
    private string _searchTerm = "";

    void ToggleDrawer()
    {
        _open = !_open;
    }
    
    private async Task<IEnumerable<string>> SearchFunc(string value)
    {
        if (string.IsNullOrEmpty(value))
            return Array.Empty<string>();
        var movies = await DataService.SearchMovieByTermAsync(value);
        return movies.Results.Select(x=>x.Title).ToArray();
    }

    private void OnEnter(KeyboardEventArgs obj)
    {
        if (obj.Key == "Enter")
        {
            NavigationManager.NavigateTo("/search/" + _searchTerm);
        }
    }

}

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>