@page "/Login"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Google
@using Microsoft.AspNetCore.Mvc


<MudGrid>
    <MudItem xs="12" sm="6">
        <MudPaper Class="pa-4 mud-height-full">
            <h3 align="center">Create new account</h3>
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" Label="Username" Required="true" RequiredError="User name is required!"/>
                <MudTextField T="string" Label="Email" Required="true" RequiredError="Email is required!"
                              Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid" })"/>
                <MudTextField T="string" Label="Password" HelperText="Choose a strong password" @ref="pwField1"
                              InputType="InputType.Password"
                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                              RequiredError="Password is required!"/>
                <MudTextField T="string"
                              Label="Password" HelperText="Repeat the password" InputType="InputType.Password"
                              Validation="@(new Func<string, string>(PasswordMatch))"/>
                <div class="d-flex align-center justify-space-between mt-6">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="ml-auto">Register</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>form.Reset())" Class="mx-4">Reset</MudButton>
                </div>
            </MudForm>
        </MudPaper>
    </MudItem>
    <MudItem align="center"  xs="12" sm="6">
        <MudPaper Class="pa-4 mud-height-full">
            <h3>Sign in</h3>
            <MudSpacer/>
            <MudButton  OnClick="Google_sign_in" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Error">
                 <MudIcon Icon="@Icons.Custom.Brands.Google"/> Sign in with Google
            </MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }

    private async Task<IActionResult> Google_sign_in()
    {
        
        var prop = new AuthenticationProperties
        {
            RedirectUri = "/"
        };
        var  challengeResult = new ChallengeResult(GoogleDefaults.AuthenticationScheme,prop);
        return  challengeResult;
    }

}