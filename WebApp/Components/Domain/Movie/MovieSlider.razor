@using Data
@using global::Data.TMDBDomain
@using WebApp.DataServices.Services.TMDB
@inject IDataService DataService


<MudText Style="font-size:30px;user-select:none;"  Color="Color.Default" Typo="Typo.button">@Category</MudText>
<MudDivider/>

@if (Movies == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true"/>
}
else
{
    <div class="d-flex flex-row justify-space-around">
        <MudStack>
            <MudSpacer/>
            <MudIconButton Color="Color.Primary" Icon="@Icons.Material.Filled.ArrowBack" aria-label="delete" OnClick="OnBackward"></MudIconButton>
            <MudSpacer/>
        </MudStack>
        @foreach (var movie in activeMovies)
        {
            <MovieCoverView Title="@movie.Title" PictureSrc="@movie.PosterPath" Id="@movie.Id.ToString()"/>
        }
        <MudStack>
            <MudSpacer/>
            <MudIconButton Color="Color.Primary" Icon="@Icons.Material.Filled.ArrowForward" aria-label="delete" OnClick="OnForward"></MudIconButton>
            <MudSpacer/>
        </MudStack>
    </div>
}


@code {

    [Parameter]
    public string Category { get; set; }

    [Parameter]
    public List<TMDBMovie>? Movies { get; set; }

    private List<TMDBMovie> activeMovies; // The movies to display
    private int currentIndex; // The current index of the active movies

    protected override async Task OnInitializedAsync()
    {
        if (Movies == null)
            return;
        activeMovies = Movies.Take(6).ToList();
        currentIndex = 0;
    }

    private void OnForward(MouseEventArgs obj)
    {
        if (currentIndex >= Movies.Count - 6)
            return;
        activeMovies = Movies.Skip(currentIndex + 1).Take(6).ToList();
        currentIndex += 1;
        StateHasChanged();
    }

    private void OnBackward()
    {
        if (currentIndex == 0)
            return;
        activeMovies = Movies.Skip(currentIndex - 1).Take(6).ToList();
        currentIndex -= 1;
        StateHasChanged();
    }

}