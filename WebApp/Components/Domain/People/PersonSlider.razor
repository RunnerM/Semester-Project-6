@using WebApp.Data.Services.TMDB
@using global::Data.TMDBDomain
@inject IDataService DataService


<MudText Color="Color.Default" Typo="Typo.h3">@Category</MudText>
<MudDivider/>

@if (_people == null)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
}
else
{
    <div class="d-flex flex-row justify-space-around">
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" aria-label="delete" OnClick="OnBackward"></MudIconButton>
        @foreach (var person in activePeople)
        {
            <PeopleCoverView Title="@person.Name" PictureSrc="@person.ProfilePath"/>
        }
        <MudIconButton Icon="@Icons.Material.Filled.ArrowForward" aria-label="delete" OnClick="OnForward"></MudIconButton>
    </div>
}


@code {
    [Parameter]
    public string Category { get; set; }

    private List<TMDBPersonInList> _people;    
    private List<TMDBPersonInList> activePeople;// The movies to display
    private int currentIndex;// The current index of the active movies

    protected override async Task OnInitializedAsync()
    {
        _people = await DataService.GetPopularPersonalAsync();
        activePeople = _people.Take(6).ToList();
        currentIndex = 0;
    }

    private void OnForward(MouseEventArgs obj)
    {
        if (currentIndex == _people.Count - 6)
            return;
        activePeople = _people.Skip(currentIndex + 6).Take(6).ToList();
        currentIndex += 6;
        StateHasChanged();
    }

    private void OnBackward()
    {
        if (currentIndex == 0)
            return;
        activePeople = _people.Skip(currentIndex - 6).Take(6).ToList();
        currentIndex -= 6;
        StateHasChanged();
    }

}