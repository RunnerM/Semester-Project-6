@using global::Data.TMDBDomain
@using System.Security.Claims
@using WebApp.DataServices.Services.TMDB
@using WebApp.DataServices.Services.User
@inject IDataService DataService 
@inject IToplistService _topListService
@inject IUserService _userService
@inject IHttpContextAccessor _httpContextAccessor
@inject HttpClient Http

@if (_movie == null)
{
    <MudSkeleton Height="300px" Width="500px"/>
}
else
{
    <MudStack Row>
        <MudText Typo="Typo.h3" Color="Color.Default" Style="padding-bottom: 10px">@_movie.Title</MudText>
    <MudSpacer/>
        <MudTooltip Text="@TooltipText">
            <MudToggleIconButton ToggledIcon="@Icons.Material.Filled.Favorite" Icon="@Icons.Material.Filled.Favorite" ToggledColor="Color.Error" Color="Color.Default" Size="Size.Large" ToggledChanged="@ManageToplist" Toggled="@toggled"></MudToggleIconButton>
       </MudTooltip>
    </MudStack>
    <MudDivider  Vertical="true" Light="true"/>
    <MudPaper Elevation="3">
        <MudStack Row="false">
            <MudImage Src="@_movie.BackdropPath" ObjectFit="ObjectFit.Cover" Height="400" Style="border-radius: 5px"></MudImage>

            <MudStack Row="true">
                <MudText Typo="Typo.h4" Color="Color.Default" Style="padding-left: 10px">Release Date:</MudText>
                <MudText Typo="Typo.h4" Color="Color.Default" Style="padding-right:8px">@_movie.ReleaseDate</MudText>
                <MudSpacer/>
                <MudText Typo="Typo.h4" Color="Color.Default" Style="padding-left: 10px">Rating:</MudText>
                <MudText Typo="Typo.h4" Color="Color.Default" Style="padding-right:8px">@_movie.VoteAverage</MudText>
                <MudText Typo="Typo.h4" Color="Color.Default" Style="padding-left: 10px">Votes:</MudText>
                <MudText Typo="Typo.h4" Color="Color.Default" Style="padding-right:8px">@_movie.VoteCount</MudText>
            </MudStack>
            <MudStack Row="true">
                <MudText Typo="Typo.h4" Color="Color.Default" Style="padding-left: 10px">Overview:</MudText>
                <MudText Typo="Typo.h6" Color="Color.Default" Style="padding-top:8px">@_movie.Overview</MudText>
            </MudStack>
        </MudStack>
    </MudPaper>
}



@code {
    private TMDBMovie _movie;
    private ClaimsPrincipal? User;
    public string?  routeId { get; set; }
    private bool toggled { get; set; }
    public string TooltipText { get; set; } = "Add to toplist";

    [Parameter]
    public int movieId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _movie = await DataService.GetMovieByIdAsync(movieId);
        var temp_routeId = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier); 
        if (temp_routeId != null)
        {
            routeId = temp_routeId.Value;
        }
    }

    private async void ManageToplist()
    {
        if (await _topListService.InitToplist(routeId))
        {
            if (toggled)
            {
                await _topListService.AddToToplistAsync(_movie.Id.ToString(), _userService.GetUserByExtarnalIdAsync(routeId).GetAwaiter().GetResult().Id);
                TooltipText = "Remove from toplist";
            }
            else
            {
                await _topListService.RemoveFromToplistAsync(_movie.Id.ToString(), _userService.GetUserByExtarnalIdAsync(routeId).GetAwaiter().GetResult().Id);
                TooltipText = "Add to toplist";

            }
        }
    }

    

}